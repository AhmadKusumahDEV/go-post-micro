# Use postgres/example user/password credentials
version: "3.9"

services:

  redis:
    image: redis:alpine
    container_name: redis-server
    ports:
      - 6379:6379
    restart: always

  db:
    image: postgres:latest
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 512mb
    
    volumes:
      - postgres_data:/var/lib/postgresql/data # Volume untuk persistensi data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: example
      POSTGRES_DB: mydatabase
    ports:
      - 5432:5432
    networks:
      - postgres_network

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - postgres_network

  second_db:
    container_name: second_db
    image: postgres:latest
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 512mb
    volumes:
      - second_postgres_data:/var/lib/postgresql/data # Volume untuk persistensi data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_USER: second
      POSTGRES_PASSWORD: example
      POSTGRES_DB: mydatabase
    ports:
      - 5433:5432

networks:
  postgres_network:
    driver: bridge

volumes:
  postgres_data:
  second_postgres_data: